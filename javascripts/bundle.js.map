{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAe,SAAS;AACxB,mBAAmB,QAAQ;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mB;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA,mBAAmB,4BAA4B;;AAE/C;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA,mBAAmB,4BAA4B;AAC/C;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,S;;;AAGA;;AAEA;;AAEA;AACA;;;;;;;;;AASA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8B;AACA;AACA,kBAAkB,SAAS;AAC3B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;;AAEA,mC;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI;;;AAGJ;;AAEA,IAAI;;;;AAIJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,Q","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./javascripts/main.js\");\n","let canvas = document.getElementById('canvas');\nlet ctx = canvas.getContext('2d');\nlet mouseX;\nlet mouseY;\nlet k = 0;\nlet cursor_radius = 30;\nlet particles_array = [];\nlet particle = {\n    vx: 0,\n    vy: 0,\n    x: 0,\n    y: 0\n};\nlet p;\nlet force, distance;\nlet dx, dy, vx, vy;\nlet theta;\nlet changed_particles_array = [];\n\n\nfunction setup(){\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    for (i = 0; i < 120; i += 1) {\n        for (j = 0; j < 60; j += 1) {\n            \n            let i1 = 50 + i * 4;\n\n            let j1 = 25 + j * 4;\n            \n            p = Object.create(particle);\n            p.x = i1;\n            p.original_x = i1;\n            p.y = j1;\n            p.original_y = j1;\n            particles_array[k] = p;\n            p.changed = false;\n            k += 1; \n        }\n    }\n\n    for (let k = 0; k < particles_array.length; k++) {\n        // debugger\n        p = particles_array[k];\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, 1, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n        // p.changed = true;\n    }\n    \n    canvas.addEventListener('mousemove', function (e) {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n    });\n}\n\n\nfunction update(){\n    for (let k = 0; k < particles_array.length; k++) {\n        \n        p = particles_array[k];\n        dx = mouseX - p.x;\n        dy = mouseY - p.y;\n\n\n        //physics credit goes to @soulwire https://github.com/soulwire\n\n        distance = (dx**2) +  (dy**2);\n        force = -(cursor_radius**2)/ distance;\n\n        if ( distance < cursor_radius**2) {\n            theta = Math.atan2(dy, dx);\n            p.vx += force * Math.cos(theta);\n            p.vy += force * Math.sin(theta);\n            p.changed = true\n            // changed_particles_array.push(p)\n        }\n        // p.changed = false;\n        p.vx *= 0.9;\n        p.vy *= 0.9;\n        if(p.vx < 0.001){\n            p.changed = false\n            // changed_particles_array.delete(p)\n        }\n        p.x += p.vx + (p.original_x - p.x) * 0.25\n        p.y += p.vy + (p.original_y - p.y) * 0.25\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, 1, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n        \n    }\n    draw();\n    window.requestAnimationFrame(update);\n}\n\n\n\nfunction draw() {\n\n    ctx.clearRect(0,0,canvas.width, canvas.height);\n    ctx.fillStyle = \"black\"\n    ctx.fillRect(0,0,canvas.width, canvas.height);\n\n    for (let k = 0; k < particles_array.length; k++) {\n        p = particles_array[k];\n        if (p.changed === true) {\n            \n        \n            ctx.beginPath();\n            ctx.arc(p.x, p.y, 1, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fillStyle = \"white\";\n            ctx.fill();\n        }  \n        \n        \n    }\n    \n}\n\nsetup();\nwindow.requestAnimationFrame(update);\n\n\n\n\n\n\n\n\n//===================================================================================================================================================\n\n// console.log(\"webpack working\");\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n\n// var canvas = document.getElementById('canvas');\n// var ctx = canvas.getContext('2d');\n\n\n// var ball = {\n//     x: 100,\n//     y: 100,\n//     vx: 5,\n//     vy: 1,\n//     radius: 30,\n//     color: 'rgba(0,0,0,1)',\n//     draw: function () {\n//         ctx.beginPath();\n//         ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n//         ctx.closePath();\n//         ctx.fillStyle = this.color;\n//         ctx.fill();\n//     }\n// };\n\n// function clear(e) {\n//     let mx = e.clientX;\n//     let my = e.clientY;\n//     let cursor_radius = 30;    \n//     ctx.fillRect(0, 0, canvas.width, canvas.height);\n//     for(i = 0 ; i < 120; i+= 1) {\n//         for(j = 0 ; j < 60; j+=1){\n//             ctx.beginPath();\n//             // After setting the fill style, draw an arc on the canvas\n//             // debugger\n//             let i1 = 50 + i * 7;\n\n//             let j1 = 25 + j * 7; \n\n//             // if ((i1 - 40 < mx && i1 + 40 > mx) && (j1 - 40 < my && j1 + 40 > my)){\n//             //     if( i1 < mx && j1 < my){\n\n//             //         ctx.arc(i1 - 30, j1 - 30, 1, 0, Math.PI * 2, true);\n//             //     } else if (i1 < mx && j1 > my) {\n//             //         ctx.arc(i1 - 30, j1 + 30, 1, 0, Math.PI * 2, true);\n//             //     } else if (i1 > mx && j1 < my) {\n//             //         ctx.arc(i1 + 30, j1 - 30, 1, 0, Math.PI * 2, true);\n//             //     } else if (i1 > mx && j1 > my) {\n//             //         ctx.arc(i1 + 30, j1 + 30, 1, 0, Math.PI * 2, true);\n//             //     }\n//             //     ctx.closePath();\n//             //     ctx.fillStyle = \"red\";\n//             // } else {\n//             //     ctx.arc(i1, j1, 1, 0, Math.PI * 2, true);\n//             //     ctx.closePath();\n//             //     ctx.fillStyle = \"white\";\n//             // }\n            \n//                 if(Math.pow(mx-i1,2) + Math.pow(my-j1, 2) <= Math.pow(cursor_radius,2)){\n//                     if (i1 < mx && j1 < my) {\n\n//                     ctx.arc(i1 - cursor_radius, j1 - cursor_radius, 1, 0, Math.PI * 2, true);\n//                 } else if (i1 < mx && j1 > my) {\n//                     ctx.arc(i1 - cursor_radius, j1 + cursor_radius, 1, 0, Math.PI * 2, true);\n//                 } else if (i1 > mx && j1 < my) {\n//                     ctx.arc(i1 + cursor_radius, j1 - cursor_radius, 1, 0, Math.PI * 2, true);\n//                 } else if (i1 > mx && j1 > my) {\n//                     ctx.arc(i1 + cursor_radius, j1 + cursor_radius, 1, 0, Math.PI * 2, true);\n//                 }\n//                     // ctx.arc(i1 + 30, j1 + 30, 1, 0, Math.PI * 2, true);\n//                     ctx.closePath();\n//                 ctx.fillStyle = \"red\";\n//                 }\n//                 else {\n//                 ctx.arc(i1, j1, 1, 0, Math.PI * 2, true);\n//                 ctx.closePath();\n//                 ctx.fillStyle = \"white\";\n//             }\n            \n\n\n//             ctx.fill();\n\n//         }\n//     }\n// }\n\n// canvas.addEventListener('mousemove', function (e) {\n\n//         clear(e);\n//         ball.x = e.clientX;\n//         ball.y = e.clientY;\n//         ball.draw();\n\n// });\n\n\n// ball.draw();\n\n// });\n\n\n\n    // setInterval(function () {\n    //     ctx.fillStyle = \"black\";\n    //     ctx.fillRect(0, 0, canvas.width, canvas.height);\n    //     posX += 1;\n    //     posY += 0.25;\n\n    //     // Draw a circle particle on the canvas\n    //     ctx.beginPath();\n    //     ctx.fillStyle = \"white\";\n    //     // After setting the fill style, draw an arc on the canvas\n    //     ctx.arc(posX, posY, 10, 0, Math.PI * 2, true);\n    //     ctx.closePath();\n    //     ctx.fill();\n    // }, 30);\n\n\n    // function draw() {\n    //     clear();\n    //     ball.draw();\n    //     ball.x += ball.vx;\n    //     ball.y += ball.vy;\n\n    //     if (ball.y + ball.vy > canvas.height || ball.y + ball.vy < 0) {\n    //         ball.vy = -ball.vy;\n    //     }\n    //     if (ball.x + ball.vx > canvas.width || ball.x + ball.vx < 0) {\n    //         ball.vx = -ball.vx;\n    //     }\n\n    //     raf = window.requestAnimationFrame(draw);\n    // }"],"sourceRoot":""}